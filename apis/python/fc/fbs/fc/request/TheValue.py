# automatically generated by the FlatBuffers compiler, do not modify

# namespace: request

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class TheValue(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = TheValue()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsTheValue(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # TheValue
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # TheValue
    def I(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # TheValue
    def Ui(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint64Flags, o + self._tab.Pos)
        return 0

    # TheValue
    def F(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # TheValue
    def S(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def TheValueStart(builder):
    builder.StartObject(4)

def Start(builder):
    TheValueStart(builder)

def TheValueAddI(builder, i):
    builder.PrependInt64Slot(0, i, 0)

def AddI(builder, i):
    TheValueAddI(builder, i)

def TheValueAddUi(builder, ui):
    builder.PrependUint64Slot(1, ui, 0)

def AddUi(builder, ui):
    TheValueAddUi(builder, ui)

def TheValueAddF(builder, f):
    builder.PrependFloat32Slot(2, f, 0.0)

def AddF(builder, f):
    TheValueAddF(builder, f)

def TheValueAddS(builder, s):
    builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(s), 0)

def AddS(builder, s):
    TheValueAddS(builder, s)

def TheValueEnd(builder):
    return builder.EndObject()

def End(builder):
    return TheValueEnd(builder)
