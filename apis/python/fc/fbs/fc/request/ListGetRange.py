# automatically generated by the FlatBuffers compiler, do not modify

# namespace: request

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class ListGetRange(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = ListGetRange()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsListGetRange(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # ListGetRange
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # ListGetRange
    def Name(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ListGetRange
    def Range(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from fc.request.Range import Range
            obj = Range()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # ListGetRange
    def Base(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

def ListGetRangeStart(builder):
    builder.StartObject(3)

def Start(builder):
    ListGetRangeStart(builder)

def ListGetRangeAddName(builder, name):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(name), 0)

def AddName(builder, name):
    ListGetRangeAddName(builder, name)

def ListGetRangeAddRange(builder, range):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(range), 0)

def AddRange(builder, range):
    ListGetRangeAddRange(builder, range)

def ListGetRangeAddBase(builder, base):
    builder.PrependUint8Slot(2, base, 0)

def AddBase(builder, base):
    ListGetRangeAddBase(builder, base)

def ListGetRangeEnd(builder):
    return builder.EndObject()

def End(builder):
    return ListGetRangeEnd(builder)
